@model UserLayer.ViewModels.RegisterViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>@ViewBag.Title</title>
    <link rel="icon" href="~/Images/favicon.ico">
    <link rel="stylesheet" href="~/Content/RegisterStyles.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">
</head>

<body>
    <div class="register-container">
        <div class="register-header">
            <p>EventHub</p>
        </div>
        <div class="register-modal">
            <div class="register-modal-container">
                <p class="register-modal-header">SignUp</p>
                <div class="form-group">
                    <form action="/Home/Register" method="post">
                        <div class="inputUsername inValues">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @placeholder = "Username" } })
                        </div>
                        <div> @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })</div>
                        <div class="inputEmail inValues">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @placeholder = "Email" } })                          
                        </div>
                        <div> @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })</div>
                        <div class="inputEmail inValues">
                            @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @placeholder = "Confirm Email" } })                            
                        </div>
                        <div>@Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })</div>
                        <div class="inputPassword inValues">
                            @Html.EditorFor(model => model.Passwd, new { htmlAttributes = new { placeholder = "Password" } })
                        </div>
                        <div>@Html.ValidationMessageFor(model => model.Passwd, "", new {@class="text-danger" })</div>
                        <div class="inputPassword inValues">
                            @Html.EditorFor(model => model.ConfirmPasswd, new { htmlAttributes = new { placeholder = "Confirm Password" } })                           
                        </div>
                        <div>@Html.ValidationMessageFor(model => model.ConfirmPasswd, "", new { @class = "text-danger" })</div>
                        <div class="submit-container">
                            <button type="submit" class="submitButton">Submit</button>
                        </div>
                    </form>
                </div>
                <div class="register-modal-footer">
                    <p>Already have an account? @Html.ActionLink("Sign In", "Login", "Home")</p>
                </div>
            </div>
        </div>
    </div>


</body>

</html>

